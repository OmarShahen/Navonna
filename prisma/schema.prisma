// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Store {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  products    Product[]
  orders      Order[]
  coupons     Coupon[]
  abandonmentEvents AbandonmentEvent[]
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  image       String
  stock       Int      @default(0)
  category    String?
  storeId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  store       Store     @relation(fields: [storeId], references: [id], onDelete: Cascade)
  orderItems  OrderItem[]
  abandonmentCartItem AbandonmentCartItem[]
}

model Order {
  id            String   @id @default(cuid())
  sessionId     String
  customerEmail String?
  customerName  String?
  total         Decimal
  status        String   @default("pending") // pending, completed, cancelled
  storeId       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  store         Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  items         OrderItem[]
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Coupon {
  id String @id @default(cuid())
  storeId String
  sessionId String
  code String
  discountPercent Float @default(10)
  isRedeemed Boolean @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())

  abandonmentEvents AbandonmentEvent[]

  store Store @relation(fields: [storeId], references: [id], onDelete: Cascade)
}

enum TriggerEvent {
  CURSOR_LEAVE
  IDLE
  SCROLLUP_FAST
}

model AbandonmentEvent {
  id String @id @default(cuid())
  storeId String
  sessionId String
  couponId String
  isAccepted Boolean @default(false)
  isCheckoutCompleted Boolean @default(false)
  triggerEvent TriggerEvent
  createdAt DateTime @default(now())

  abandonmentCartItem AbandonmentCartItem[]

  store Store @relation(fields: [storeId], references: [id], onDelete: Cascade)
  coupon Coupon? @relation(fields: [couponId], references: [id], onDelete: Cascade)
}

model AbandonmentCartItem {
  id String @id @default(cuid())
  abandonmentEventId String
  productId String
  productName String
  productPrice Float
  productQuantity Float
  createdAt DateTime @default(now())

  abandonmentEvent AbandonmentEvent @relation(fields: [abandonmentEventId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
}